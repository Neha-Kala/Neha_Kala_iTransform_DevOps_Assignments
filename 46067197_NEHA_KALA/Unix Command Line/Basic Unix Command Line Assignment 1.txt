//Neha Kala

Basic Unix Command Line

Assignments:-

1.List the contents of a directory and their attributes
-->ls
-----------------------------------------------------------------------------------------------------------------------------------
2.Long list the content with file, directory ownership, permissions,sizes, etc…
-->ls -l
-----------------------------------------------------------------------------------------------------------------------------------
3.Display the size of the file in human readable format
-->ls -l -h
-----------------------------------------------------------------------------------------------------------------------------------
4.Show all files and folders including hidden one
-->ls -a
-----------------------------------------------------------------------------------------------------------------------------------
5.list directories recursively
-->ls -R
-----------------------------------------------------------------------------------------------------------------------------------
6.Sort the files by size with largest at the top
-->ls -lt
-----------------------------------------------------------------------------------------------------------------------------------
7.Sort the files by last time modified displaying the newest first.
-->ls -t
-----------------------------------------------------------------------------------------------------------------------------------
8.Diplay the location of a program/command, where it is installed.
-->pwd
-----------------------------------------------------------------------------------------------------------------------------------
9.Which command is used to switch directory from one to another
-->cd
-----------------------------------------------------------------------------------------------------------------------------------
10.List all the environment variables set for the current shell environment
--> env
-----------------------------------------------------------------------------------------------------------------------------------
11.Did you notice something in the output of "env" command?
--> print a list of the current environment variables
-----------------------------------------------------------------------------------------------------------------------------------
12.Which command is used to print the text or any variables value in the Console/Terminal?
-->echo
-----------------------------------------------------------------------------------------------------------------------------------
13.Print the value of the env variable "PATH" on the console
--> echo $PATH
-----------------------------------------------------------------------------------------------------------------------------------
14.Is linux a case-sensitive operating system?
--> Yes
-----------------------------------------------------------------------------------------------------------------------------------
15.Is, "Ls" same as "ls"?
--> No
-----------------------------------------------------------------------------------------------------------------------------------
16.Display your currently logged in user
-->whoami
-----------------------------------------------------------------------------------------------------------------------------------
17.how do you change the currrently logged in user to another user?
-->Go to the top right corner and click the Power Off/Log out option to open the dropdown and
 you can choose either of Switch User. 
-----------------------------------------------------------------------------------------------------------------------------------
18.Which command is used to leave a shell environment that you are currently logged in to?
-->exit
-----------------------------------------------------------------------------------------------------------------------------------
19.How do you reboot the system?
--> sudo reboot
-----------------------------------------------------------------------------------------------------------------------------------
20.How do you shutdown the system?
-->shutdown -h
-----------------------------------------------------------------------------------------------------------------------------------
21.Display all the major running processes in the system
-->ps -A
-----------------------------------------------------------------------------------------------------------------------------------
22.Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
-->ps -aux
the username of the process′ owner, CPU loads, the starting time of the process, the command that initiated the process
-----------------------------------------------------------------------------------------------------------------------------------
23.Display the name of the system kernel
-->uname-s
Linux
-----------------------------------------------------------------------------------------------------------------------------------
24.display the kernel release number
-->uname -r
-----------------------------------------------------------------------------------------------------------------------------------
25.display the machine type of the current kernel
-->uname -m
x86_64
-----------------------------------------------------------------------------------------------------------------------------------
26.Display the name of the operating system that the kernel is running on
-->uname -o
GNU/Linux
-----------------------------------------------------------------------------------------------------------------------------------
27.Display all info that uname command can show.
-->uname -a
-----------------------------------------------------------------------------------------------------------------------------------
28.Display the name of directory that you are currently pointing to
-->pwd
-----------------------------------------------------------------------------------------------------------------------------------
29.change the current directory to another directory that you have in your system.
-->cd
-----------------------------------------------------------------------------------------------------------------------------------
30.Go up one directory
--> cd ..
-----------------------------------------------------------------------------------------------------------------------------------
31.Return to last directory
--> cd -
-----------------------------------------------------------------------------------------------------------------------------------
32.change the current directory to home(logged in user's) directory
--> cd ~
-----------------------------------------------------------------------------------------------------------------------------------
33.How to check all the command used from the prompt (Command History)
--> history
-----------------------------------------------------------------------------------------------------------------------------------
34.In which file the history of commands are stored in?
--> .bash_history
-----------------------------------------------------------------------------------------------------------------------------------
35.How many lines of history does the system keep and from where you can change it?
-->how much command history is preserved is limited by the HISTSIZE setting, usually it is set to 100,500 and 1000.
-----------------------------------------------------------------------------------------------------------------------------------
36.How can you modify bash's history behaviour?
-->By using PROMPT_COMMAND.
-----------------------------------------------------------------------------------------------------------------------------------
37.Display all the commands entered so far, now,
try to run a particular command from the history list without typing that command.
NOTE:- TAB key is your friend when it comes to command completion and having long file and
directory names autocompleted at the bash prompt for you. JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)
-->By using history command, we can display all the commands so far and
for further process we can use tab or search by using upward key.
-----------------------------------------------------------------------------------------------------------------------------------
38.What are the different types of shell and where are they used and how do we use them?
-->
1. The Bourne Shell (sh)-This is what made it the default shell for Solaris OS.
 It is also used as the default shell for all Solaris system administration scripts.
2. The GNU Bourne-Again Shell (bash)-It allows us to automatically recall previously used commands and 
edit them with help of arrow keys, unlike the Bourne shell.
3. The C Shell (csh)- It was developed to include useful programming features like in-built support for arithmetic operations
 and a syntax similar to the C programming language.
4. The Korn Shell (ksh)- It allows in-built support for arithmetic operations while 
offereing interactive features which are similar to the C shell.
5. The Z Shell (zsh)-The Z Shell or zsh is a sh shell extension with tons of improvements for customization.
-----------------------------------------------------------------------------------------------------------------------------------
39.What is the difference between login shell and non-login shell?
-->If the output is the name of our shell, prepended by a dash, then it is a login shell. For example -bash, -su etc.
 A Non login shell is started by a program without a login. In this case, the program just passes the name of the shell executable.
-----------------------------------------------------------------------------------------------------------------------------------
40.How do we start login shell and non-login shell?
--> A login shell is a shell given to a user upon login into their user account. This is initiated by using the -l or --login option
When you start a shell in a terminal in an existing session, you get an interactive, non-login shell.
-----------------------------------------------------------------------------------------------------------------------------------
41.What happens when you start a login shell (which files are read and used and Why)?
-->When Bash is invoked as an interactive login shell, or as a non-interactive shell with the --login option, it first reads and executes commands from the file /etc/profile , if that file exists.
 After reading that file, it looks for ~/.
-----------------------------------------------------------------------------------------------------------------------------------
42.What happens when you start a non-login shell (Which files are read and used and Why)?
-->When an interactive shell that is not a login shell is started, Bash reads and executes commands from ~/. bashrc , if that file exists. ...
 The --rcfile file option will force Bash to read and execute commands from file instead of ~/. bashrc .
-----------------------------------------------------------------------------------------------------------------------------------
43.What are Shell Configuration Files, why do we need it?
-->This file contains individual specific configurations. This file is read at login and also each time a new Bash shell is started. Ideally, this is where you should place any aliases. This file is used to customize key bindings/key strokes.
-----------------------------------------------------------------------------------------------------------------------------------

44.Explain the Order of file usage from the system/user's home directory when user logs in to the System.
-->ls -ltu /path/to/file
-----------------------------------------------------------------------------------------------------------------------------------

45.What are Shell Variables, list major shell variables and what do they represent?
-->A shell variable is a special variable that is set by the shell and is required by the shell in order to function correctly.
 Some of these variables are environment variables whereas others are local variables.
-----------------------------------------------------------------------------------------------------------------------------------

46.How we see all our env variables?
-->get-childitem env:*
-----------------------------------------------------------------------------------------------------------------------------------

47.How we see all env variables in alphabical order?
-->get-childitem env:* |
sort-object Key |
more
-----------------------------------------------------------------------------------------------------------------------------------

48.What Format does the env var and its values are stored?
-->An environment variable is a variable whose value is set outside the program,typically through functionality built into the operating system or microservice.
An environment variable is made up of a name/value pair, and any number may be created and available for reference at a point in time.
------------------------------------------------------------------------------------------------------------------------------------

49.How do you create your own varible?
-->variable_name=variable_value
------------------------------------------------------------------------------------------------------------------------------------

50.How do you start a new bash shell?
-->Set the environmental variable pointing to git location C:\Program Files\Git . 
Now go to your location in windows where you wanna open git bash. Press alt + d and type get-bash
-------------------------------------------------------------------------------------------------------------------------------------

51.Difference between Local/Shell variables to Global Variable
-->Local variable is declared inside a function whereas Global variable is declared outside the function.
Local variables are created when the function has started execution and is lost when the function terminates, on the other hand, Global variable is created as execution starts and is lost when the program ends.
-------------------------------------------------------------------------------------------------------------------------------------

52.Making a variable accessible from other the shell in the system.
-->If you want to make a variable available to every new process, then you can put it in /etc/environment (requires root privileges) or ~/. profile .
-------------------------------------------------------------------------------------------------------------------------------------

53.Show the real life use case of exporting a variable
-->
-------------------------------------------------------------------------------------------------------------------------------------

54.Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"
-->

------------------------------------------------------------------------------------------------------------------------------------
55.What is Globbing? Explain in depth with examples?
-->The Bash shell feature that is used for matching or expanding specific types of patterns is called globbing.
Globbing is mainly used to match filenames or searching for content in a file. Globbing uses wildcard characters to create the pattern.

Suppose, you know the filename is ‘abc’ and extension is 3 characters long, but don’t know the extension.
Run the following command by using ‘?’ to search all files with the name ‘test’ having any extension of three characters long.
$ ls -l abc.???

-------------------------------------------------------------------------------------------------------------------------------------
56.List all entries with extension ".sh"
-->ls -l *.sh
-------------------------------------------------------------------------------------------------------------------------------------
57.List all entries with numbers in it.
-->ls *[0-9]*
-------------------------------------------------------------------------------------------------------------------------------------
58.List all entries that starts with a character and ends with a number
-->ls [{a-z},{A-Z}]*[0-9]
-------------------------------------------------------------------------------------------------------------------------------------
59.List all entries that name length more than 5 characters
-->?????*
-------------------------------------------------------------------------------------------------------------------------------------

60.What is Quoting? and Why do we need it?
-->You can enable or disable the meaning of a special character by enclosing them in single quotes. 
This is also useful to suppress warnings and error messages while writing the shell scripts.
----------------------------------------------------------------------------------------------------------------------------------

61.Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.
-->
1)echo Hello; Word (This will print hello only); Quoting solution - echo Hello\; Word
2)echo "I have \$1200"
3)DATE=`date`  (It shows data available)    --    echo "Current Date: $DATE"
----------------------------------------------------------------------------------------------------------------------------------------

62.How do you find a particular files/directories based on a particular search criteria?
HINT:- look for commands -> locate, find and whereis
-->
1)find /home/linuxize -type f -iname document.pdf
2)locate -i -e *text.txt*
3)whereis filename
-----------------------------------------------------------------------------------------------------------------------------------

63.Write major difference between locate, find and whereis?
Big difference is that find searches real files recursively down a given directory, while locate searches a database without requiring specific directory.
Thus, if you have saved a file before updating database, find will find it , but locate won't.
As for whereis,it searches only inside those directories that are mentioned in your PATH variable and only those with executable permissions.
-------------------------------------------------------------------------------------------------------------------------------------------

64.How Globbing is different from locate, find and whereis?
-->
File globbing is a feature provided by the UNIX/Linux shell to represent multiple filenames by using special characters called wildcards with a single file name.
A wildcard is essentially a symbol which may be used to substitute for one or more characters.
------------------------------------------------------------------------------------------------------------------------------------------

65.Explain the Linux File System.
-->A Linux file system is a structured collection of files on a disk drive or a partition.The general-purpose computer system needs to store data systematically
 so that we can easily access the files in less time. It stores the data on hard disks (HDD) or some equivalent storage type.
------------------------------------------------------------------------------------------------------------------------------------------

66.Explain absolute and Relative Paths
-->Absolute paths:An absolute path is defined as specifying the location of a file or directory from the root directory(/).
In other words,we can say that an absolute path is a complete path from start of actual file system from / directory.

Relative paths:Relative path is defined as the path related to the present working directly(pwd).
It starts at your current directory and never starts with a / .
-------------------------------------------------------------------------------------------------------------------------------------------

67.What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
-->By using touch,cat,printf commands or using right angle bracket, we can create a file in linux system.
Examples:
touch test.txt
cat > test.txt
printf ‘First line of text\n’ test.txt
> test.txt

cat command : It is used to create the file with content.
touch command: It is used to create a file without any content.The file created using touch command is empty.

Also by using vim command in vi text editor and nano command in Nano text editor,we can create file.

--------------------------------------------------------------------------------------------------------------------------------------------

68.In how many ways we can delete the files from linux system? write an example of each and teh difference between them.
-->Shred – Overwrite a File to Hide Content--  shred -zvu -n 10 notes.list
-z – adds a final overwrite with zeros to hide shredding
-v – enables display of operation progress
-u – truncates and removes file after overwriting
-n – specifies number of times to overwrite file content (the default is 3)

Wipe – Securely Erase Files in Linux--  wipe -rfi private/*
-r – tells wipe to recurse into subdirectories
-f – enables forced deletion and disable confirmation query
-i – shows progress of deletion process


Secure-deletetion Toolkit for Linux--   srm -vz private/*
-v – enables verbose mode
-z – wipes the last write with zeros instead of random data

Also, sswap – Secure Swap Wiper.
sdmem – Secure Memory Wiper.
with these commands, we can delete files.
------------------------------------------------------------------------------------------------------------------------------------------

69.Archiving files using linux command, write a command to archive set of files from linux commands.
-->tar -cvf name.tar /path/to/file1 /path/to/file2 /path/to/file3
------------------------------------------------------------------------------------------------------------------------------------------

70.Extract the archived files from the above step.
-->tar –xvf name.tar

																													Neha_Kala