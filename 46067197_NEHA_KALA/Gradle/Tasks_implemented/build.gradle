import java.awt.Taskbar

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.0-jre'
}


//task hello{
//	doFirst{
//		println "Greetings"
//	}
//	doLast{
//	    println "Good Bye"
//	}
//}


//task mycustomtask{
//	group "Custom tasks"
//	description "Description"
//	doLast{
//		println "Hi All";
//	}
//
//	}
	
//	task doSomeOperation1{
//		group"Custom tasks"
//		doLast{
//			println "This is skipping task"
//		}
//		
//	}
//	doSomeOperation1.onlyIf{
//		project.hasProperty('doOperation')
//		
//	}
	
//project.task("Task1")
//Task1.description = "This is task 1"
//Task1.doLast {println "This is task1 : Learning"}
//
//project.ext.name = "Neha"
//
//task ("Task2")
//Task2.doFirst {println "This is task2 : tasks dependencies"}
//
//task "Task3"
//Task3.doLast {println "This is task3 - $project.ext.name - defined variable outside this task"}
//
//task Task4
//def val = 1117
//Task4.description = "This is task4"
//Task4.doLast {println "Printing a Defined value : $val"}
//Task3.dependsOn Task4
//Task4.dependsOn Task2
//Task2.dependsOn Task1	

//---------------------------

//task "copyFiles" (type: Copy) {
//	from 'To Copy'
//	into 'Copied'
//}
apply plugin : 'java'
